{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b97b7c28\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid-content bg-purple-dark\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  return _openBlock(), _createBlock(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_hoisted_1, _createTextVNode(\" \" + _toDisplayString(_ctx.message), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;gEAGMA,oBAA2C,KAA3C,EAA2C;EAAtCC,KAAK,EAAC;AAAgC,CAA3C,EAAwC,IAAxC,EAAwC;AAAA;AAAxC;;;;;;;uBAFJC,aAISC,iBAJT,EAIS,IAJT,EAIS;sBAHP,MAEsB,CAFtBC,aAEsBC,iBAFtB,EAEsB;MAFbC,IAAI,EAAE;IAEO,CAFtB,EAAiB;wBACf,MAA2C,CAA3CC,UAA2C,yBAC3CC,iBAAEC,YAAF,GAAS;MAAA;OADkC,EAD5B;;;;IAAA,CAAjB,CAEsB,EACf;;;;EAAA,CAJT","names":["_createElementVNode","class","_createBlock","_component_el_row","_createVNode","_component_el_col","span","_hoisted_1","_toDisplayString","_ctx"],"sourceRoot":"","sources":["/Users/licheng/Documents/untitled/src/components/views/RoleManage.vue"],"sourcesContent":["<template>\n  <el-row>\n    <el-col :span=\"24\">\n      <div class=\"grid-content bg-purple-dark\" />\n      {{message}}</el-col>\n  </el-row>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'RoleManage',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      projectList: [{projectName: 'asdfsd'}],\n      projectForm: {\n        projectName: '',\n        proposer: '',\n        checker: '',\n        pm: '',\n        status: ''\n      }\n    }\n  },\n  async beforeCreate(){\n    const result = await axios.get('http://localhost:8080/project/list',{crossdomain: true});\n    console.log('a11234567890'+result)\n    this.projectList = result.data;\n  },\n  methods:{\n    createProject:function(){\n      axios.post('/project/create',this.projectForm).then(function(res){\n        console.log(res)\n      })\n    },\n    initFormData:function(){\n      this.projectForm.projectName = '';\n      this.projectForm.proposer = '';\n      this.projectForm.checker = '';\n      this.projectForm.pm = '';\n      this.projectForm.status = '';\n\n    }\n  }\n\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}