{"ast":null,"code":"/**\r\n *@description 观察者模式 全局监听富文本编辑器\r\n */\nexport const QuillWatch = {\n  watcher: {},\n  // 登记编辑器信息\n  active: null,\n  // 当前触发的编辑器\n  on: function (imageExtendId, ImageExtend) {\n    // 登记注册使用了ImageEXtend的编辑器\n    if (!this.watcher[imageExtendId]) {\n      this.watcher[imageExtendId] = ImageExtend;\n    }\n  },\n  emit: function (activeId, type = 1) {\n    // 事件发射触发\n    this.active = this.watcher[activeId];\n\n    if (type === 1) {\n      imgHandler();\n    }\n  }\n};\n/**\r\n * @description 图片功能拓展： 增加上传 拖动 复制\r\n */\n\nexport class ImageExtend {\n  /**\r\n   * @param quill {Quill}富文本实例\r\n   * @param config {Object} options\r\n   * config  keys: action, headers, editForm start end error  size response\r\n   */\n  constructor(quill, config = {}) {\n    this.id = Math.random();\n    this.quill = quill;\n    this.quill.id = this.id;\n    this.config = config;\n    this.file = ''; // 要上传的图片\n\n    this.imgURL = ''; // 图片地址\n\n    quill.root.addEventListener('paste', this.pasteHandle.bind(this), false);\n    quill.root.addEventListener('drop', this.dropHandle.bind(this), false);\n    quill.root.addEventListener('dropover', function (e) {\n      e.preventDefault();\n    }, false);\n    this.cursorIndex = 0;\n    QuillWatch.on(this.id, this);\n  }\n  /**\r\n   * @description 粘贴\r\n   * @param e\r\n   */\n\n\n  pasteHandle(e) {\n    // e.preventDefault()\n    QuillWatch.emit(this.quill.id, 0);\n    let clipboardData = e.clipboardData;\n    let i = 0;\n    let items, item, types;\n\n    if (clipboardData) {\n      items = clipboardData.items;\n\n      if (!items) {\n        return;\n      }\n\n      item = items[0];\n      types = clipboardData.types || [];\n\n      for (; i < types.length; i++) {\n        if (types[i] === 'Files') {\n          item = items[i];\n          break;\n        }\n      }\n\n      if (item && item.kind === 'file' && item.type.match(/^image\\//i)) {\n        this.file = item.getAsFile();\n        let self = this; // 如果图片限制大小\n\n        if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n          if (self.config.sizeError) {\n            self.config.sizeError();\n          }\n\n          return;\n        }\n\n        if (this.config.action) {// this.uploadImg()\n        } else {// this.toBase64()\n        }\n      }\n    }\n  }\n  /**\r\n   * 拖拽\r\n   * @param e\r\n   */\n\n\n  dropHandle(e) {\n    QuillWatch.emit(this.quill.id, 0);\n    const self = this;\n    e.preventDefault(); // 如果图片限制大小\n\n    if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n      if (self.config.sizeError) {\n        self.config.sizeError();\n      }\n\n      return;\n    }\n\n    self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\n\n    if (this.config.action) {\n      self.uploadImg();\n    } else {\n      self.toBase64();\n    }\n  }\n  /**\r\n   * @description 将图片转为base4\r\n   */\n\n\n  toBase64() {\n    const self = this;\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      // 返回base64\n      self.imgURL = e.target.result;\n      self.insertImg();\n    };\n\n    reader.readAsDataURL(self.file);\n  }\n  /**\r\n   * @description 上传图片到服务器\r\n   */\n\n\n  uploadImg() {\n    const self = this;\n    let quillLoading = self.quillLoading;\n    let config = self.config; // 构造表单\n\n    let formData = new FormData();\n    formData.append(config.name, self.file); // 自定义修改表单\n\n    if (config.editForm) {\n      config.editForm(formData);\n    } // 创建ajax请求\n\n\n    let xhr = new XMLHttpRequest();\n    xhr.open('post', config.action, true); // 如果有设置请求头\n\n    if (config.headers) {\n      config.headers(xhr);\n    }\n\n    if (config.change) {\n      config.change(xhr, formData);\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          //success\n          let res = JSON.parse(xhr.responseText);\n          self.imgURL = config.response(res);\n          QuillWatch.active.uploadSuccess();\n          self.insertImg();\n\n          if (self.config.success) {\n            self.config.success();\n          }\n        } else {\n          //error\n          if (self.config.error) {\n            self.config.error();\n          }\n\n          QuillWatch.active.uploadError();\n        }\n      }\n    }; // 开始上传数据\n\n\n    xhr.upload.onloadstart = function (e) {\n      QuillWatch.active.uploading(); // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\n      // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\n\n      if (config.start) {\n        config.start();\n      }\n    }; // 上传过程\n\n\n    xhr.upload.onprogress = function (e) {\n      let complete = (e.loaded / e.total * 100 | 0) + '%';\n      QuillWatch.active.progress(complete);\n    }; // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\n\n\n    xhr.upload.onerror = function (e) {\n      QuillWatch.active.uploadError();\n\n      if (config.error) {\n        config.error();\n      }\n    }; // 上传数据完成（成功或者失败）时会触发\n\n\n    xhr.upload.onloadend = function (e) {\n      if (config.end) {\n        config.end();\n      }\n    };\n\n    xhr.send(formData);\n  }\n  /**\r\n   * @description 往富文本编辑器插入图片\r\n   */\n\n\n  insertImg() {\n    const self = QuillWatch.active;\n    self.quill.insertEmbed(QuillWatch.active.cursorIndex, 'image', self.imgURL);\n    self.quill.update();\n    self.quill.setSelection(self.cursorIndex + 1);\n  }\n  /**\r\n   * @description 显示上传的进度\r\n   */\n\n\n  progress(pro) {\n    pro = '[' + 'uploading' + pro + ']';\n    QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, pro);\n  }\n  /**\r\n   * 开始上传\r\n   */\n\n\n  uploading() {\n    let length = (QuillWatch.active.quill.getSelection() || {}).index || QuillWatch.active.quill.getLength();\n    QuillWatch.active.cursorIndex = length;\n    QuillWatch.active.quill.insertText(QuillWatch.active.cursorIndex, '[uploading...]', {\n      'color': 'red'\n    }, true);\n  }\n  /**\r\n   * 上传失败\r\n   */\n\n\n  uploadError() {\n    QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '[upload error]');\n  }\n\n  uploadSuccess() {\n    QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '');\n  }\n\n}\n/**\r\n * @description 点击图片上传\r\n */\n\nexport function imgHandler() {\n  let fileInput = document.querySelector('.quill-image-input');\n\n  if (fileInput === null) {\n    fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    fileInput.classList.add('quill-image-input');\n    fileInput.style.display = 'none'; // 监听选择文件\n\n    fileInput.addEventListener('change', function () {\n      let self = QuillWatch.active;\n      self.file = fileInput.files[0];\n      fileInput.value = ''; // 如果图片限制大小\n\n      if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n        if (self.config.sizeError) {\n          self.config.sizeError();\n        }\n\n        return;\n      }\n\n      if (self.config.action) {\n        self.uploadImg();\n      } else {\n        self.toBase64();\n      }\n    });\n    document.body.appendChild(fileInput);\n  }\n\n  fileInput.click();\n}\n/**\r\n *@description 全部工具栏\r\n */\n\nexport const container = [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n  'header': 1\n}, {\n  'header': 2\n}], [{\n  'list': 'ordered'\n}, {\n  'list': 'bullet'\n}], [{\n  'script': 'sub'\n}, {\n  'script': 'super'\n}], [{\n  'indent': '-1'\n}, {\n  'indent': '+1'\n}], [{\n  'direction': 'rtl'\n}], [{\n  'size': ['small', false, 'large', 'huge']\n}], [{\n  'header': [1, 2, 3, 4, 5, 6, false]\n}], [{\n  'color': []\n}, {\n  'background': []\n}], [{\n  'font': []\n}], [{\n  'align': []\n}], ['clean'], ['link', 'image', 'video']];","map":{"version":3,"names":["QuillWatch","watcher","active","on","imageExtendId","ImageExtend","emit","activeId","type","imgHandler","constructor","quill","config","id","Math","random","file","imgURL","root","addEventListener","pasteHandle","bind","dropHandle","e","preventDefault","cursorIndex","clipboardData","i","items","item","types","length","kind","match","getAsFile","self","size","sizeError","action","dataTransfer","files","uploadImg","toBase64","reader","FileReader","onload","target","result","insertImg","readAsDataURL","quillLoading","formData","FormData","append","name","editForm","xhr","XMLHttpRequest","open","headers","change","onreadystatechange","readyState","status","res","JSON","parse","responseText","response","uploadSuccess","success","error","uploadError","upload","onloadstart","uploading","start","onprogress","complete","loaded","total","progress","onerror","onloadend","end","send","insertEmbed","update","setSelection","pro","innerHTML","replace","getSelection","index","getLength","insertText","fileInput","document","querySelector","createElement","setAttribute","classList","add","style","display","value","body","appendChild","click","container"],"sources":["/Users/licheng/Documents/untitled/node_modules/quill-image-extend-module/index.js"],"sourcesContent":["/**\r\n *@description 观察者模式 全局监听富文本编辑器\r\n */\r\nexport const QuillWatch = {\r\n    watcher: {},  // 登记编辑器信息\r\n    active: null,  // 当前触发的编辑器\r\n    on: function (imageExtendId, ImageExtend) {  // 登记注册使用了ImageEXtend的编辑器\r\n        if (!this.watcher[imageExtendId]) {\r\n            this.watcher[imageExtendId] = ImageExtend\r\n        }\r\n    },\r\n    emit: function (activeId, type = 1) {  // 事件发射触发\r\n        this.active = this.watcher[activeId]\r\n        if (type === 1) {\r\n            imgHandler()\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description 图片功能拓展： 增加上传 拖动 复制\r\n */\r\nexport class ImageExtend {\r\n    /**\r\n     * @param quill {Quill}富文本实例\r\n     * @param config {Object} options\r\n     * config  keys: action, headers, editForm start end error  size response\r\n     */\r\n    constructor(quill, config = {}) {\r\n        this.id = Math.random()\r\n        this.quill = quill\r\n        this.quill.id = this.id\r\n        this.config = config\r\n        this.file = ''  // 要上传的图片\r\n        this.imgURL = ''  // 图片地址\r\n        quill.root.addEventListener('paste', this.pasteHandle.bind(this), false)\r\n        quill.root.addEventListener('drop', this.dropHandle.bind(this), false)\r\n        quill.root.addEventListener('dropover', function (e) {\r\n            e.preventDefault()\r\n        }, false)\r\n        this.cursorIndex = 0\r\n        QuillWatch.on(this.id, this)\r\n    }\r\n\r\n    /**\r\n     * @description 粘贴\r\n     * @param e\r\n     */\r\n    pasteHandle(e) {\r\n        // e.preventDefault()\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        let clipboardData = e.clipboardData\r\n        let i = 0\r\n        let items, item, types\r\n\r\n        if (clipboardData) {\r\n            items = clipboardData.items;\r\n\r\n            if (!items) {\r\n                return;\r\n            }\r\n            item = items[0];\r\n            types = clipboardData.types || [];\r\n\r\n            for (; i < types.length; i++) {\r\n                if (types[i] === 'Files') {\r\n                    item = items[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (item && item.kind === 'file' && item.type.match(/^image\\//i)) {\r\n                this.file = item.getAsFile()\r\n                let self = this\r\n                // 如果图片限制大小\r\n                if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                    if (self.config.sizeError) {\r\n                        self.config.sizeError()\r\n                    }\r\n                    return\r\n                }\r\n                if (this.config.action) {\r\n                    // this.uploadImg()\r\n                } else {\r\n                    // this.toBase64()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽\r\n     * @param e\r\n     */\r\n    dropHandle(e) {\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        const self = this\r\n        e.preventDefault()\r\n        // 如果图片限制大小\r\n        if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n            if (self.config.sizeError) {\r\n                self.config.sizeError()\r\n            }\r\n            return\r\n        }\r\n        self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\r\n        if (this.config.action) {\r\n            self.uploadImg()\r\n        } else {\r\n            self.toBase64()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description 将图片转为base4\r\n     */\r\n    toBase64() {\r\n        const self = this\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            // 返回base64\r\n            self.imgURL = e.target.result\r\n            self.insertImg()\r\n        }\r\n        reader.readAsDataURL(self.file)\r\n    }\r\n\r\n    /**\r\n     * @description 上传图片到服务器\r\n     */\r\n    uploadImg() {\r\n        const self = this\r\n        let quillLoading = self.quillLoading\r\n        let config = self.config\r\n        // 构造表单\r\n        let formData = new FormData()\r\n        formData.append(config.name, self.file)\r\n        // 自定义修改表单\r\n        if (config.editForm) {\r\n            config.editForm(formData)\r\n        }\r\n        // 创建ajax请求\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('post', config.action, true)\r\n        // 如果有设置请求头\r\n        if (config.headers) {\r\n            config.headers(xhr)\r\n        }\r\n        if (config.change) {\r\n            config.change(xhr, formData)\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    //success\r\n                    let res = JSON.parse(xhr.responseText)\r\n                    self.imgURL = config.response(res)\r\n                    QuillWatch.active.uploadSuccess()\r\n                    self.insertImg()\r\n                    if (self.config.success) {\r\n                        self.config.success()\r\n                    }\r\n                } else {\r\n                    //error\r\n                    if (self.config.error) {\r\n                        self.config.error()\r\n                    }\r\n                    QuillWatch.active.uploadError()\r\n                }\r\n            }\r\n        }\r\n        // 开始上传数据\r\n        xhr.upload.onloadstart = function (e) {\r\n            QuillWatch.active.uploading()\r\n            // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\r\n            // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\r\n            if (config.start) {\r\n                config.start()\r\n            }\r\n        }\r\n        // 上传过程\r\n        xhr.upload.onprogress = function (e) {\r\n            let complete = (e.loaded / e.total * 100 | 0) + '%'\r\n            QuillWatch.active.progress(complete)\r\n        }\r\n        // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\r\n        xhr.upload.onerror = function (e) {\r\n            QuillWatch.active.uploadError()\r\n            if (config.error) {\r\n                config.error()\r\n            }\r\n        }\r\n        // 上传数据完成（成功或者失败）时会触发\r\n        xhr.upload.onloadend = function (e) {\r\n            if (config.end) {\r\n                config.end()\r\n            }\r\n        }\r\n        xhr.send(formData)\r\n    }\r\n\r\n    /**\r\n     * @description 往富文本编辑器插入图片\r\n     */\r\n    insertImg() {\r\n        const self = QuillWatch.active\r\n        self.quill.insertEmbed(QuillWatch.active.cursorIndex, 'image', self.imgURL)\r\n        self.quill.update()\r\n        self.quill.setSelection(self.cursorIndex+1);\r\n    }\r\n\r\n    /**\r\n     * @description 显示上传的进度\r\n     */\r\n    progress(pro) {\r\n        pro = '[' + 'uploading' + pro + ']'\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, pro)\r\n    }\r\n\r\n    /**\r\n     * 开始上传\r\n     */\r\n    uploading() {\r\n        let length = (QuillWatch.active.quill.getSelection() || {}).index || QuillWatch.active.quill.getLength()\r\n        QuillWatch.active.cursorIndex = length\r\n        QuillWatch.active.quill.insertText(QuillWatch.active.cursorIndex, '[uploading...]', {'color': 'red'}, true)\r\n    }\r\n\r\n    /**\r\n     * 上传失败\r\n     */\r\n    uploadError() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '[upload error]')\r\n    }\r\n\r\n    uploadSuccess() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '')\r\n    }\r\n}\r\n\r\n/**\r\n * @description 点击图片上传\r\n */\r\nexport function imgHandler() {\r\n    let fileInput = document.querySelector('.quill-image-input');\r\n    if (fileInput === null) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.setAttribute('type', 'file');\r\n        fileInput.classList.add('quill-image-input');\r\n        fileInput.style.display = 'none'\r\n        // 监听选择文件\r\n        fileInput.addEventListener('change', function () {\r\n            let self = QuillWatch.active\r\n            self.file = fileInput.files[0]\r\n            fileInput.value = ''\r\n            // 如果图片限制大小\r\n            if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                if (self.config.sizeError) {\r\n                    self.config.sizeError()\r\n                }\r\n                return\r\n            }\r\n            if (self.config.action) {\r\n                self.uploadImg()\r\n            } else {\r\n                self.toBase64()\r\n            }\r\n        })\r\n        document.body.appendChild(fileInput);\r\n    }\r\n    fileInput.click();\r\n}\r\n\r\n/**\r\n *@description 全部工具栏\r\n */\r\nexport const container = [\r\n    ['bold', 'italic', 'underline', 'strike'],\r\n    ['blockquote', 'code-block'],\r\n    [{'header': 1}, {'header': 2}],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}],\r\n    [{'script': 'sub'}, {'script': 'super'}],\r\n    [{'indent': '-1'}, {'indent': '+1'}],\r\n    [{'direction': 'rtl'}],\r\n    [{'size': ['small', false, 'large', 'huge']}],\r\n    [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n    [{'color': []}, {'background': []}],\r\n    [{'font': []}],\r\n    [{'align': []}],\r\n    ['clean'],\r\n    ['link', 'image', 'video']\r\n]\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}