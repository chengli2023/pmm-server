{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7e0f26ac\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  className: \"example\"\n};\nconst _hoisted_2 = {\n  className: \"output ql-snow\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  className: \"title\"\n}, \"Output\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_quill_editor = _resolveComponent(\"quill-editor\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_quill_editor, {\n    className: \"editor\",\n    modelValue: $data.content,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event),\n    options: $data.editorOption\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\"]), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", {\n    className: \"ql-editor\",\n    innerHTML: this.content\n  }, null, 8\n  /* PROPS */\n  , _hoisted_4)])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,SAAS,EAAC;;;EAMRA,SAAS,EAAC;;;gEACbC,oBAAmC,KAAnC,EAAmC;EAA9BD,SAAS,EAAC;AAAoB,CAAnC,EAAuB,QAAvB,EAA6B;AAAA;AAA7B;;;;;;uBAPJE,oBAUM,KAVN,cAUM,CATJC,aAIEC,uBAJF,EAIE;IAHEJ,SAAS,EAAC,QAGZ;gBAFWK,aAEX;+DAFWA,gBAAOC,OAElB;IADGC,OAAO,EAAEF;EACZ,CAJF;;EAAA,4BASI,EAJJJ,oBAGM,KAHN,cAGM,CAFJO,UAEI,EADJP,oBAAuD,KAAvD,EAAuD;IAAlDD,SAAS,EAAC,WAAwC;IAA5BS,SAAqB,OAARC;EAAe,CAAvD;;EAAA,aACI,CAHN,CAII,CAVN","names":["className","_createElementVNode","_createElementBlock","_createVNode","_component_quill_editor","$data","$event","options","_hoisted_3","innerHTML","content"],"sourceRoot":"","sources":["/Users/licheng/Documents/untitled/src/components/lib/RechTextarea.vue"],"sourcesContent":["<template>\n  <div className=\"example\">\n    <quill-editor\n        className=\"editor\"\n        v-model=\"content\"\n        :options=\"editorOption\"\n    />\n    <div className=\"output ql-snow\">\n      <div className=\"title\">Output</div>\n      <div className=\"ql-editor\" v-html=\"this.content\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dedent from 'dedent'\nimport {Quill} from 'vue-quill-editor'\nimport {container, ImageExtend, QuillWatch} from 'quill-image-extend-module'\nimport 'quill-emoji/dist/quill-emoji.css'\n\nconst testImageAPI = 'https://github.surmon.me/images/'\nconst testImageUrl = testImageAPI + 'background.jpg'\n\nQuill.register('modules/ImageExtend', ImageExtend)\n\nexport default {\n  name: 'quill-example-register-modules',\n  title: 'Register modules',\n  data() {\n    return {\n      name: 'register-modules-example',\n      content: dedent`\n          <p><span class=\"ql-emojiblot\" data-name=\"grinning\">ï»¿<span contenteditable=\"false\"><span class=\"ap ap-grinning\">ð</span></span>ï»¿</span></p><p><br></p><p><em>Register </em><a href=\"https://github.com/contentco/quill-emoji\" rel=\"noopener noreferrer\" target=\"_blank\"><em>Quill emoji module</em></a></p><p><br></p><p><em>Register </em><a href=\"https://github.com/NextBoy/quill-image-extend-module\" rel=\"noopener noreferrer\" target=\"_blank\"><em>Quill image extend module</em></a></p>\n        `,\n      editorOption: {\n        theme: 'snow',\n        modules: {\n          \"emoji-toolbar\": true,\n          \"emoji-shortname\": true,\n          toolbar: {\n            container: [\n              ['link', 'image', 'emoji']\n            ],\n            handlers: {\n              'image': function () {\n                QuillWatch.emit(this.quill.id)\n              }\n            }\n          },\n          ImageExtend: {\n            loading: true,\n            name: 'img',\n            action: 'https://github.surmon.me/images/',\n            response: (res) => {\n              return testImageUrl\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.example {\n  display: flex;\n  height: 20rem;\n\n  .editor,\n  .output {\n    width: 50%;\n    height: 100%;\n  }\n\n  $toolbar-height: 42px;\n\n  .editor {\n    padding-bottom: $toolbar-height;\n  }\n\n  .output {\n    border: none;\n\n    .title {\n      height: $toolbar-height;\n      line-height: $toolbar-height;\n      padding-left: $gap;\n      border-bottom: 1px solid #ccc;\n    }\n\n    > code {\n      width: 100%;\n      margin: 0;\n      padding: 1rem;\n      border: 1px solid #ccc;\n      border-top: none;\n      border-left: none;\n      border-radius: 0;\n      height: 100%;\n      overflow-y: auto;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}