{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit_container\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_quill_editor = _resolveComponent(\"quill-editor\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"  新增时输入 \"), _createVNode(_component_quill_editor, {\n    modelValue: $data.content,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event),\n    ref: \"myQuillEditor\",\n    options: $data.editorOption,\n    onBlur: _cache[1] || (_cache[1] = $event => $options.onEditorBlur($event)),\n    onFocus: _cache[2] || (_cache[2] = $event => $options.onEditorFocus($event)),\n    onChange: _cache[3] || (_cache[3] = $event => $options.onEditorChange($event))\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\"]), _createCommentVNode(\" 从数据库读取展示 \"), _createElementVNode(\"div\", {\n    innerHTML: _ctx.str,\n    class: \"ql-editor\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;uBAAXC,oBAeM,KAfN,cAeM,CAdJC,+BAcI,EAbJC,aAQeC,uBARf,EAQe;gBAPFC,aAOE;+DAPFA,gBAAOC,OAOL;IANXC,GAAG,EAAC,eAMO;IALVC,OAAO,EAAEH,kBAKC;IAJVI,MAAI,sCAAEC,sBAAaJ,MAAb,CAAF,CAIM;IAHVK,OAAK,sCAAED,uBAAcJ,MAAd,CAAF,CAGK;IAFVM,QAAM,sCAAEF,wBAAeJ,MAAf,CAAF;EAEI,CARf;;EAAA,4BAaI,EAJJJ,iCAII,EAHJW,oBAEM,KAFN,EAEM;IAFDC,SAAY,EAAJC,QAEP;IAFYf,KAAK,EAAC;EAElB,CAFN;;EAAA,aAGI,CAfN","names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_quill_editor","$data","$event","ref","options","onBlur","$options","onFocus","onChange","_createElementVNode","innerHTML","_ctx"],"sourceRoot":"","sources":["/Users/licheng/Documents/untitled/src/components/lib/RechTextarea.vue"],"sourcesContent":["<template>\n  <div class=\"edit_container\">\n    <!--  新增时输入 -->\n    <quill-editor\n        v-model=\"content\"\n        ref=\"myQuillEditor\"\n        :options=\"editorOption\"\n        @blur=\"onEditorBlur($event)\"\n        @focus=\"onEditorFocus($event)\"\n        @change=\"onEditorChange($event)\"\n    >\n    </quill-editor>\n    <!-- 从数据库读取展示 -->\n    <div v-html=\"str\" class=\"ql-editor\">\n      {{ str }}\n    </div>\n  </div>\n</template>\n<script>\nimport { quillEditor } from 'vue-quill-editor' // 调用编辑器\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\n\nexport default {\n  components: {\n    quillEditor\n  },\n  data () {\n    return {\n      content: `<ol><li><strong>111</strong></li><li><strong>222</strong></li><li><strong>333</strong></li></ol>`,\n      editorOption: {\n        placeholder: '请在这里输入',\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'], // 加粗，斜体，下划线，删除线\n            ['blockquote', 'code-block'], // 引用，代码块\n            [{ 'header': 1 }, { 'header': 2 }], // 标题，键值对的形式；1、2表示字体大小\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }], // 列表\n            [{ 'script': 'sub' }, { 'script': 'super' }], // 上下标\n            [{ 'indent': '-1' }, { 'indent': '+1' }], // 缩进\n            [{ 'direction': 'rtl' }], // 文本方向\n            [{ 'size': ['small', false, 'large', 'huge'] }], // 字体大小\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // 几级标题\n            [{ 'color': [] }, { 'background': [] }], // 字体颜色，字体背景颜色\n            [{ 'font': [false, 'heiti', 'songti', 'kaiti', 'lishu', 'arial', 'monospace'] }], // 字体\n            [{ 'align': [] }], // 对齐方式\n            ['clean'], // 清除字体样式\n            ['image', 'video'] // 上传图片、上传视频\n          ]\n        }\n      }\n    }\n  },\n  computed: {\n    \n  },\n  mounted () {\n    const content = ''// 请求后台返回的内容字符串\n    this.str = this.escapeStringHTML(content)\n  },\n  methods: {\n    onEditorReady (editor) { // 准备编辑器\n    },\n    onEditorBlur () {}, // 失去焦点事件\n    onEditorFocus () {}, // 获得焦点事件\n    onEditorChange () {}, // 内容改变事件\n    // 转码\n    escapeStringHTML (str) {\n      str = str.replace(/&lt;/g, '<')\n      str = str.replace(/&gt;/g, '>')\n      return str\n    }\n  }\n}\n</script>\n<style>\n.editor {\n  line-height: normal !important;\n  height: 500px;\n}\n.ql-snow .ql-tooltip[data-mode=link]::before {\n  content: \"请输入链接地址:\";\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n  border-right: 0px;\n  content: '保存';\n  padding-right: 0px;\n}\n\n.ql-snow .ql-tooltip[data-mode=video]::before {\n  content: \"请输入视频地址:\";\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: '14px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\n  content: '10px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\n  content: '18px';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\n  content: '32px';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: '文本';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\n  content: '标题1';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\n  content: '标题2';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\n  content: '标题3';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\n  content: '标题4';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"5\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before {\n  content: '标题5';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"6\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before {\n  content: '标题6';\n}\n\n.ql-snow .ql-picker.ql-font .ql-picker-label::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item::before {\n  content: '标准字体';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {\n  content: '衬线字体';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {\n  content: '等宽字体';\n}\n</style>\n\n\n"]},"metadata":{},"sourceType":"module"}