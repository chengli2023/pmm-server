{"ast":null,"code":"import { ArrowRight } from '@element-plus/icons-vue';\nimport { QuillEditor } from '@vueup/vue-quill';\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\nimport axios from 'axios';\nimport { onMounted, reactive, ref, shallowReactive } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'ProjectPlan',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    /* eslint-disable */\n\n    const dialogFormVisible = ref(false);\n    const formLabelWidth = '140px';\n    const vueQuillToolbarOptions = [['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    [{\n      'color': []\n    }], // dropdown with defaults from theme\n    [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }] // remove formatting button\n    ];\n    const route = useRoute();\n    const projectPlanList = reactive([]);\n    const projectPlanForm = shallowReactive({\n      projectId: '',\n      id: '',\n      bu: '',\n      developer: '',\n      dependTask: '',\n      workHour: '',\n      plan: '',\n      releaseOrder: '',\n      comments: ''\n    });\n    const projectObj = reactive({\n      projectName: '',\n      proposer: '',\n      checker: '',\n      pm: '',\n      status: ''\n    });\n\n    const fetchProjectPlanList = async function () {\n      console.log(route.query.id);\n      projectPlanList.splice(0, projectPlanList.length);\n      const result = await axios.get(`/api/project/plan/list?id=${route.query.id}`, {});\n\n      for (let index in result.data) {\n        projectPlanList.push(result.data[index]);\n      } // projectList = result.data;\n\n    };\n\n    const fetchProjectById = async function (projectId) {\n      const result = await axios.get('/api/project/getById', {\n        params: {\n          projectId: projectId\n        }\n      });\n      projectObj.projectName = result.data.projectName;\n      projectObj.proposer = result.data.proposer;\n      projectObj.checker = result.data.checker;\n      projectObj.pm = result.data.pm;\n      projectObj.status = result.data.status;\n    };\n\n    const createProjectPlan = async function () {\n      let res = {};\n      let isEditAction = projectPlanForm.id ? true : false;\n\n      if (isEditAction) {\n        res = await axios.post('/api/project/editProjectPlan', projectPlanForm);\n      } else {\n        res = await axios.post('/api/project/createProjectPlan', projectPlanForm);\n      }\n\n      if (res.status == 200) {\n        ElMessage({\n          message: isEditAction ? '编辑成功' : '创建成功',\n          type: 'success'\n        });\n        dialogFormVisible.value = false;\n        fetchProjectPlanList();\n      }\n    };\n\n    const deleteProjectPlan = async function (projectPlanId) {\n      console.log('asfasdf' + projectPlanId);\n      const res = await axios.post('/api/project/deleteProjectPlan', {\n        projectPlanId: projectPlanId\n      });\n\n      if (res.status == 200) {\n        ElMessage({\n          message: '删除成功',\n          type: 'success'\n        });\n        dialogFormVisible.value = false;\n        fetchProjectPlanList();\n      }\n    };\n\n    const editProjectPlan = async function (projectPlanId) {\n      const result = await axios.get(`/api/project/getProjectPlan?id=${projectPlanId}`, {});\n      console.log(result.data);\n      projectPlanForm.id = result.data.id;\n      projectPlanForm.bu = result.data.bu;\n      projectPlanForm.developer = result.data.developer;\n      projectPlanForm.dependTask = result.data.dependTask;\n      projectPlanForm.workHour = result.data.workHour;\n      projectPlanForm.plan = result.data.plan;\n      projectPlanForm.releaseOrder = result.data.releaseOrder;\n      projectPlanForm.comments = result.data.comments;\n      dialogFormVisible.value = true;\n    };\n\n    const openCreateDialog = function () {\n      projectPlanForm.id = '';\n      projectPlanForm.bu = '';\n      projectPlanForm.developer = '';\n      projectPlanForm.dependTask = '';\n      projectPlanForm.workHour = '';\n      projectPlanForm.plan = '';\n      projectPlanForm.releaseOrder = '';\n      projectPlanForm.comments = '';\n      dialogFormVisible.value = true;\n    };\n\n    const initFormData = function () {\n      this.projectForm.projectName = '';\n      this.projectForm.proposer = '';\n      this.projectForm.checker = '';\n      this.projectForm.pm = '';\n      this.projectForm.status = '';\n    };\n\n    const mountedFun = function () {\n      projectPlanForm.projectId = route.query.id;\n      fetchProjectPlanList();\n      fetchProjectById(route.query.id);\n    };\n\n    onMounted(mountedFun);\n    const __returned__ = {\n      dialogFormVisible,\n      formLabelWidth,\n      vueQuillToolbarOptions,\n      route,\n      projectPlanList,\n      projectPlanForm,\n      projectObj,\n      fetchProjectPlanList,\n      fetchProjectById,\n      createProjectPlan,\n      deleteProjectPlan,\n      editProjectPlan,\n      openCreateDialog,\n      initFormData,\n      mountedFun,\n      ArrowRight,\n      QuillEditor,\n      axios,\n      onMounted,\n      reactive,\n      ref,\n      shallowReactive,\n      ElMessage,\n      useRoute\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ArrowRight","QuillEditor","axios","onMounted","reactive","ref","shallowReactive","ElMessage","useRoute","dialogFormVisible","formLabelWidth","vueQuillToolbarOptions","route","projectPlanList","projectPlanForm","projectId","id","bu","developer","dependTask","workHour","plan","releaseOrder","comments","projectObj","projectName","proposer","checker","pm","status","fetchProjectPlanList","console","log","query","splice","length","result","get","index","data","push","fetchProjectById","params","createProjectPlan","res","isEditAction","post","message","type","value","deleteProjectPlan","projectPlanId","editProjectPlan","openCreateDialog","initFormData","projectForm","mountedFun"],"sources":["/Users/licheng/Documents/untitled/src/components/views/ProjectPlan.vue"],"sourcesContent":["<template>\n  <el-row>\n    <el-col :span=\"12\">\n      <el-breadcrumb :separator-icon=\"ArrowRight\">\n        <el-breadcrumb-item :to=\"{ path: '/projectList' }\">项目&需求</el-breadcrumb-item>\n        <el-breadcrumb-item>排期</el-breadcrumb-item>\n      </el-breadcrumb>\n    </el-col>\n    <el-col :span=\"12\" style=\"text-align: right\">\n      <el-button type=\"primary\" @click=\"openCreateDialog\">创建排期</el-button>\n    </el-col>\n  </el-row>\n\n  <el-card class=\"project-card\">\n    <el-row>\n      <el-col :span=\"24\" style=\"text-align: left;margin-bottom: 10px\">\n        需求/项目名称：<u>{{projectObj.projectName}}</u>\n      </el-col>\n    </el-row>\n    <el-row style=\"text-align: left\">\n      <el-col :span=\"4\">\n        提出人：<u>{{projectObj.proposer}}</u>\n      </el-col>\n      <el-col :span=\"4\">\n        验收人：<u>{{projectObj.checker}}</u>\n      </el-col>\n      <el-col :span=\"4\">\n        项目对接人：<u>{{projectObj.pm}}</u>\n      </el-col>\n      <el-col :span=\"4\">\n        状态：<u>{{projectObj.status}}</u>\n      </el-col>\n    </el-row>\n  </el-card>\n<!--  <el-card class=\"plan-card\">-->\n  <el-table :data=\"projectPlanList\" style=\"width: 100%\">\n    <el-table-column fixed prop=\"bu\" label=\"业务中心\"/>\n    <el-table-column prop=\"developer\" label=\"开发/测试人员\"  />\n\n    <el-table-column prop=\"dependTask\" label=\"依赖/被依赖事项\">\n      <template v-slot=\"scope\">\n        <p v-html='scope.row.dependTask'></p>\n      </template>\n    </el-table-column>\n    <el-table-column prop=\"workHour\" label=\"工时\" >\n      <template v-slot=\"scope\">\n        <p v-html='scope.row.workHour'></p>\n      </template>\n    </el-table-column>\n    <el-table-column prop=\"plan\" label=\"排期\" >\n      <template v-slot=\"scope\">\n        <p v-html='scope.row.plan'></p>\n      </template>\n    </el-table-column>\n    <el-table-column prop=\"releaseOrder\" label=\"发布顺序\" >\n      <template v-slot=\"scope\">\n        <p v-html='scope.row.releaseOrder'></p>\n      </template>\n    </el-table-column>\n    <el-table-column prop=\"comments\" label=\"进展/风险备注\">\n      <template v-slot=\"scope\">\n        <p v-html='scope.row.comments'></p>\n      </template>\n    </el-table-column>\n\n    <el-table-column fixed=\"right\" label=\"操作\">\n      <template #default=\"scope\">\n        <el-button type=\"primary\" plain  size=\"small\" @click=\"()=>{editProjectPlan(scope.row.id)}\">编辑</el-button>\n        <el-popconfirm title=\"Are you sure to delete this?\" @confirm=\"()=>{deleteProjectPlan(scope.row.id)}\">\n          <template  #reference>\n            <el-button type=\"danger\" plain  size=\"small\">删除</el-button>\n          </template>\n        </el-popconfirm>\n      </template>\n    </el-table-column>\n  </el-table>\n<!--  </el-card>-->\n  <el-row>\n    <el-col :span=\"24\">\n    </el-col>\n  </el-row>\n  <el-dialog v-if=\"dialogFormVisible\" v-model=\"dialogFormVisible\" title=\"需求排期\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" top=\"5vh\">\n    <el-form>\n      <el-form-item label=\"业务团队\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"projectPlanForm.bu\" autocomplete=\"off\"/>\n      </el-form-item>\n      <el-form-item label=\"开发/测试人员\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"projectPlanForm.developer\" autocomplete=\"off\"/>\n      </el-form-item>\n      <el-form-item label=\"依赖/被依赖事项\" :label-width=\"formLabelWidth\">\n        <QuillEditor :toolbar=\"vueQuillToolbarOptions\" class=\"ql-toolbar-custom\" theme=\"snow\" @ready=\"((quill)=>{})\" content-type=\"html\" v-model:content=\"projectPlanForm.dependTask\" style=\"height: 100px;width:100%\"/>\n<!--        <el-input v-model=\"projectPlanForm.dependTask\" autocomplete=\"off\" :rows=\"3\" type=\"textarea\" />-->\n      </el-form-item>\n      <el-form-item label=\"工时\" :label-width=\"formLabelWidth\">\n        <QuillEditor :toolbar=\"vueQuillToolbarOptions\" class=\"ql-toolbar-custom\" theme=\"snow\" content-type=\"html\" v-model:content=\"projectPlanForm.workHour\" style=\"height: 100px;width:100%\"/>\n      </el-form-item>\n      <el-form-item label=\"排期\" :label-width=\"formLabelWidth\">\n        <QuillEditor :toolbar=\"vueQuillToolbarOptions\" class=\"ql-toolbar-custom\" theme=\"snow\" content-type=\"html\" v-model:content=\"projectPlanForm.plan\" style=\"height: 100px;width:100%\"/>\n      </el-form-item>\n\n      <el-form-item label=\"发布顺序\" :label-width=\"formLabelWidth\">\n        <QuillEditor :toolbar=\"vueQuillToolbarOptions\" class=\"ql-toolbar-custom\" theme=\"snow\" content-type=\"html\" v-model:content=\"projectPlanForm.releaseOrder\" style=\"height: 100px;width:100%\"/>\n      </el-form-item>\n\n      <el-form-item label=\"进展/风险备注\" :label-width=\"formLabelWidth\">\n        <QuillEditor :toolbar=\"vueQuillToolbarOptions\" class=\"ql-toolbar-custom\" theme=\"snow\" content-type=\"html\" v-model:content=\"projectPlanForm.comments\" style=\"height: 100px;width:100%\"/>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"createProjectPlan\">确认</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ArrowRight } from '@element-plus/icons-vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\nimport axios from 'axios'\nimport {onMounted, reactive, ref,shallowReactive} from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { useRoute } from 'vue-router'\n\nconst dialogFormVisible = ref(false)\nconst formLabelWidth = '140px'\nconst vueQuillToolbarOptions = [\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n  [{ 'color': [] }],          // dropdown with defaults from theme\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }]                                   // remove formatting button\n]\nconst route = useRoute()\nconst projectPlanList = reactive([])\nconst projectPlanForm = shallowReactive({\n  projectId:'',\n  id:'',\n  bu: '',\n  developer:'',\n  dependTask: '',\n  workHour: '',\n  plan: '',\n  releaseOrder: '',\n  comments: ''\n})\nconst projectObj = reactive({\n  projectName: '',\n  proposer: '',\n  checker: '',\n  pm: '',\n  status: ''\n})\n\nconst fetchProjectPlanList = async function (){\n  console.log(route.query.id)\n  projectPlanList.splice(0,projectPlanList.length)\n  const result = await axios.get(`/api/project/plan/list?id=${route.query.id}`,{});\n  for(let index in result.data){\n    projectPlanList.push(result.data[index])\n  }\n  // projectList = result.data;\n}\nconst fetchProjectById = async function (projectId){\n  const result = await axios.get('/api/project/getById',{params:{\n      projectId:projectId\n    }});\n  projectObj.projectName = result.data.projectName;\n  projectObj.proposer = result.data.proposer;\n  projectObj.checker = result.data.checker;\n  projectObj.pm = result.data.pm;\n  projectObj.status = result.data.status;\n\n}\n\nconst createProjectPlan = async function(){\n  let res = {};\n  let isEditAction = projectPlanForm.id?true:false;\n  if(isEditAction){\n    res = await axios.post('/api/project/editProjectPlan',projectPlanForm);\n  }else {\n    res = await axios.post('/api/project/createProjectPlan',projectPlanForm);\n  }\n\n  if(res.status == 200){\n    ElMessage({\n      message: isEditAction?'编辑成功':'创建成功',\n      type: 'success',\n    })\n    dialogFormVisible.value = false\n    fetchProjectPlanList();\n  }\n}\nconst deleteProjectPlan = async function(projectPlanId){\n  console.log('asfasdf' + projectPlanId)\n  const res = await axios.post('/api/project/deleteProjectPlan',{projectPlanId:projectPlanId});\n  if(res.status == 200){\n    ElMessage({\n      message: '删除成功',\n      type: 'success',\n    })\n    dialogFormVisible.value = false\n    fetchProjectPlanList();\n  }\n}\nconst editProjectPlan = async function(projectPlanId){\n\n  const result = await axios.get(`/api/project/getProjectPlan?id=${projectPlanId}`,{});\n  console.log(result.data)\n  projectPlanForm.id = result.data.id;\n  projectPlanForm.bu = result.data.bu;\n  projectPlanForm.developer = result.data.developer;\n  projectPlanForm.dependTask = result.data.dependTask;\n  projectPlanForm.workHour = result.data.workHour;\n  projectPlanForm.plan = result.data.plan;\n  projectPlanForm.releaseOrder = result.data.releaseOrder;\n  projectPlanForm.comments = result.data.comments;\n\n  dialogFormVisible.value = true;\n\n}\nconst openCreateDialog = function (){\n  projectPlanForm.id = '';\n  projectPlanForm.bu = '';\n  projectPlanForm.developer = '';\n  projectPlanForm.dependTask = '';\n  projectPlanForm.workHour = '';\n  projectPlanForm.plan = '';\n  projectPlanForm.releaseOrder = '';\n  projectPlanForm.comments = '';\n  dialogFormVisible.value = true;\n}\nconst initFormData = function(){\n  this.projectForm.projectName = '';\n  this.projectForm.proposer = '';\n  this.projectForm.checker = '';\n  this.projectForm.pm = '';\n  this.projectForm.status = '';\n}\nconst mountedFun = function (){\n  projectPlanForm.projectId = route.query.id\n  fetchProjectPlanList()\n  fetchProjectById(route.query.id)\n}\nonMounted(\n    mountedFun\n)\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.el-button--text {\n  margin-right: 15px;\n}\n.el-select {\n  width: 300px;\n}\n.el-input {\n  width: 300px;\n}\n.dialog-footer button:first-child {\n  margin-right: 10px;\n}\n\n\n\n.editor{\n  width: 50%;\n  height: 100%;\n}\n.project-card {\n  margin: 20px 0px 20px 0px;\n  width: 100%;\n}\n.plan-card {\n  width: 100%;\n}\n.ql-toolbar.ql-snow{\n padding: 0px;\n  width: 100%;\n  text-align: left;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}